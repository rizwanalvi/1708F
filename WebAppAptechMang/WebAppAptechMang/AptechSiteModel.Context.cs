//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppAptechMang
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class APTECHDBEntities : DbContext
    {
        public APTECHDBEntities()
            : base("name=APTECHDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACADMIC> ACADMICS { get; set; }
        public virtual DbSet<APPROGRAM> APPROGRAMs { get; set; }
        public virtual DbSet<ATTENDANCE> ATTENDANCEs { get; set; }
        public virtual DbSet<BATCH_REGISTRATION> BATCH_REGISTRATION { get; set; }
        public virtual DbSet<BATCHDAY> BATCHDAYS { get; set; }
        public virtual DbSet<CONTACTNO> CONTACTNOes { get; set; }
        public virtual DbSet<COURS> COURSES { get; set; }
        public virtual DbSet<FACULTY> FACULTies { get; set; }
        public virtual DbSet<FACUTLY_BATCH> FACUTLY_BATCH { get; set; }
        public virtual DbSet<MENU> MENUs { get; set; }
        public virtual DbSet<REGSKILL> REGSKILLs { get; set; }
        public virtual DbSet<SEMESTER> SEMESTERS { get; set; }
        public virtual DbSet<SKILL> SKILLS { get; set; }
        public virtual DbSet<STD_LOG> STD_LOG { get; set; }
        public virtual DbSet<STUDENT_LOG> STUDENT_LOG { get; set; }
        public virtual DbSet<STUDENTINFO> STUDENTINFOes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<USEROLE> USEROLEs { get; set; }
        public virtual DbSet<USER> USERS { get; set; }
        public virtual DbSet<EXREPORT> EXREPORTs { get; set; }
        public virtual DbSet<VMBACTH_FA> VMBACTH_FA { get; set; }
        public virtual DbSet<VMBATCHINFO> VMBATCHINFOes { get; set; }
        public virtual DbSet<VMBATCHSKILL> VMBATCHSKILLs { get; set; }
        public virtual DbSet<VMEXAMLOG> VMEXAMLOGs { get; set; }
        public virtual DbSet<VMSTDETAIL> VMSTDETAILS { get; set; }
        public virtual DbSet<VMSTDLOG> VMSTDLOGs { get; set; }
        public virtual DbSet<VMSTDUPDATE> VMSTDUPDATEs { get; set; }
        public virtual DbSet<VMTRANSFERLOG> VMTRANSFERLOGs { get; set; }
    
        public virtual ObjectResult<GetAcadmicHeadMenu_Result> GetAcadmicHeadMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAcadmicHeadMenu_Result>("GetAcadmicHeadMenu");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spAddNewBatch(Nullable<int> bATCHNO, string tIMESLOT, Nullable<int> dAYID, Nullable<int> sTDTARGET, Nullable<System.DateTime> sTARTDATE, Nullable<System.DateTime> eXENDDATE, Nullable<System.DateTime> eNDDATE, Nullable<int> fAID, string fACODE)
        {
            var bATCHNOParameter = bATCHNO.HasValue ?
                new ObjectParameter("BATCHNO", bATCHNO) :
                new ObjectParameter("BATCHNO", typeof(int));
    
            var tIMESLOTParameter = tIMESLOT != null ?
                new ObjectParameter("TIMESLOT", tIMESLOT) :
                new ObjectParameter("TIMESLOT", typeof(string));
    
            var dAYIDParameter = dAYID.HasValue ?
                new ObjectParameter("DAYID", dAYID) :
                new ObjectParameter("DAYID", typeof(int));
    
            var sTDTARGETParameter = sTDTARGET.HasValue ?
                new ObjectParameter("STDTARGET", sTDTARGET) :
                new ObjectParameter("STDTARGET", typeof(int));
    
            var sTARTDATEParameter = sTARTDATE.HasValue ?
                new ObjectParameter("STARTDATE", sTARTDATE) :
                new ObjectParameter("STARTDATE", typeof(System.DateTime));
    
            var eXENDDATEParameter = eXENDDATE.HasValue ?
                new ObjectParameter("EXENDDATE", eXENDDATE) :
                new ObjectParameter("EXENDDATE", typeof(System.DateTime));
    
            var eNDDATEParameter = eNDDATE.HasValue ?
                new ObjectParameter("ENDDATE", eNDDATE) :
                new ObjectParameter("ENDDATE", typeof(System.DateTime));
    
            var fAIDParameter = fAID.HasValue ?
                new ObjectParameter("FAID", fAID) :
                new ObjectParameter("FAID", typeof(int));
    
            var fACODEParameter = fACODE != null ?
                new ObjectParameter("FACODE", fACODE) :
                new ObjectParameter("FACODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddNewBatch", bATCHNOParameter, tIMESLOTParameter, dAYIDParameter, sTDTARGETParameter, sTARTDATEParameter, eXENDDATEParameter, eNDDATEParameter, fAIDParameter, fACODEParameter);
        }
    
        public virtual int spAddUser(string uNAME, string uPASS, Nullable<int> rOLEID, string fANAME, string fNAME, string fANIC, string fACODE, Nullable<int> gENDER)
        {
            var uNAMEParameter = uNAME != null ?
                new ObjectParameter("UNAME", uNAME) :
                new ObjectParameter("UNAME", typeof(string));
    
            var uPASSParameter = uPASS != null ?
                new ObjectParameter("UPASS", uPASS) :
                new ObjectParameter("UPASS", typeof(string));
    
            var rOLEIDParameter = rOLEID.HasValue ?
                new ObjectParameter("ROLEID", rOLEID) :
                new ObjectParameter("ROLEID", typeof(int));
    
            var fANAMEParameter = fANAME != null ?
                new ObjectParameter("FANAME", fANAME) :
                new ObjectParameter("FANAME", typeof(string));
    
            var fNAMEParameter = fNAME != null ?
                new ObjectParameter("FNAME", fNAME) :
                new ObjectParameter("FNAME", typeof(string));
    
            var fANICParameter = fANIC != null ?
                new ObjectParameter("FANIC", fANIC) :
                new ObjectParameter("FANIC", typeof(string));
    
            var fACODEParameter = fACODE != null ?
                new ObjectParameter("FACODE", fACODE) :
                new ObjectParameter("FACODE", typeof(string));
    
            var gENDERParameter = gENDER.HasValue ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddUser", uNAMEParameter, uPASSParameter, rOLEIDParameter, fANAMEParameter, fNAMEParameter, fANICParameter, fACODEParameter, gENDERParameter);
        }
    
        public virtual int spAttendanceMWF()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAttendanceMWF");
        }
    
        public virtual int spAttendanceTTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAttendanceTTS");
        }
    
        public virtual ObjectResult<string> spBatchList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spBatchList");
        }
    
        public virtual ObjectResult<string> spBatchList01()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spBatchList01");
        }
    
        public virtual int spBatchMerger(string tOBATCHNO, string fROMBATCHNO)
        {
            var tOBATCHNOParameter = tOBATCHNO != null ?
                new ObjectParameter("TOBATCHNO", tOBATCHNO) :
                new ObjectParameter("TOBATCHNO", typeof(string));
    
            var fROMBATCHNOParameter = fROMBATCHNO != null ?
                new ObjectParameter("FROMBATCHNO", fROMBATCHNO) :
                new ObjectParameter("FROMBATCHNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBatchMerger", tOBATCHNOParameter, fROMBATCHNOParameter);
        }
    
        public virtual int spBatchTransferBySTDID(Nullable<int> sTDID, string bATCHID)
        {
            var sTDIDParameter = sTDID.HasValue ?
                new ObjectParameter("STDID", sTDID) :
                new ObjectParameter("STDID", typeof(int));
    
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBatchTransferBySTDID", sTDIDParameter, bATCHIDParameter);
        }
    
        public virtual int spChangeBatchFaculty(string bATCHID, Nullable<int> fAID)
        {
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            var fAIDParameter = fAID.HasValue ?
                new ObjectParameter("FAID", fAID) :
                new ObjectParameter("FAID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spChangeBatchFaculty", bATCHIDParameter, fAIDParameter);
        }
    
        public virtual int spChangePassword(Nullable<int> iD, string uPASS)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uPASSParameter = uPASS != null ?
                new ObjectParameter("UPASS", uPASS) :
                new ObjectParameter("UPASS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spChangePassword", iDParameter, uPASSParameter);
        }
    
        public virtual int spChangePasswordByEMPID(Nullable<int> iD, string uPASS)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var uPASSParameter = uPASS != null ?
                new ObjectParameter("UPASS", uPASS) :
                new ObjectParameter("UPASS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spChangePasswordByEMPID", iDParameter, uPASSParameter);
        }
    
        public virtual ObjectResult<spExamReport_Result> spExamReport(string bATCHID, string sEMNAME)
        {
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            var sEMNAMEParameter = sEMNAME != null ?
                new ObjectParameter("SEMNAME", sEMNAME) :
                new ObjectParameter("SEMNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spExamReport_Result>("spExamReport", bATCHIDParameter, sEMNAMEParameter);
        }
    
        public virtual ObjectResult<spFacultyBatchLoad_Result> spFacultyBatchLoad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFacultyBatchLoad_Result>("spFacultyBatchLoad");
        }
    
        public virtual ObjectResult<spFacultyBatchLoadById_Result> spFacultyBatchLoadById(Nullable<int> fACULTYID)
        {
            var fACULTYIDParameter = fACULTYID.HasValue ?
                new ObjectParameter("FACULTYID", fACULTYID) :
                new ObjectParameter("FACULTYID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFacultyBatchLoadById_Result>("spFacultyBatchLoadById", fACULTYIDParameter);
        }
    
        public virtual ObjectResult<spFollowUpByBatchID_Result> spFollowUpByBatchID(string bATCHID, string dATE)
        {
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            var dATEParameter = dATE != null ?
                new ObjectParameter("DATE", dATE) :
                new ObjectParameter("DATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFollowUpByBatchID_Result>("spFollowUpByBatchID", bATCHIDParameter, dATEParameter);
        }
    
        public virtual ObjectResult<spGetAcadmicHeadMenu_Result> spGetAcadmicHeadMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAcadmicHeadMenu_Result>("spGetAcadmicHeadMenu");
        }
    
        public virtual ObjectResult<spGetBatchByID_Result> spGetBatchByID(string bATCHID)
        {
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBatchByID_Result>("spGetBatchByID", bATCHIDParameter);
        }
    
        public virtual ObjectResult<spGetBatchStatus_Result> spGetBatchStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBatchStatus_Result>("spGetBatchStatus");
        }
    
        public virtual ObjectResult<spGetFacultyMenu_Result> spGetFacultyMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFacultyMenu_Result>("spGetFacultyMenu");
        }
    
        public virtual ObjectResult<spGetGroupLeaderMenu_Result> spGetGroupLeaderMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGroupLeaderMenu_Result>("spGetGroupLeaderMenu");
        }
    
        public virtual ObjectResult<string> spGetListOfFaculty_Batches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetListOfFaculty_Batches");
        }
    
        public virtual int spGetStudentCountBatchWise(string bATCHID)
        {
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetStudentCountBatchWise", bATCHIDParameter);
        }
    
        public virtual ObjectResult<spLsitOfActiveEmp_Result> spLsitOfActiveEmp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLsitOfActiveEmp_Result>("spLsitOfActiveEmp");
        }
    
        public virtual int spStudentRegistration(Nullable<int> sTD_ID, string sTD_NAME, string sTD_FNAME, byte[] sTD_PIC, Nullable<System.DateTime> dOB, Nullable<int> gENDER, string pROG_NAME, Nullable<int> bATCH_NO, string tIME_SLOT, string eMAIL_ID, string pAR_EMAIL_ID, string hOME_ADDRE, Nullable<int> sEM_ID, Nullable<System.DateTime> rEGIS_DATE, string pRIM_NUM, string sECON_NUM, string sMS_NUM, string oTHER_NUM)
        {
            var sTD_IDParameter = sTD_ID.HasValue ?
                new ObjectParameter("STD_ID", sTD_ID) :
                new ObjectParameter("STD_ID", typeof(int));
    
            var sTD_NAMEParameter = sTD_NAME != null ?
                new ObjectParameter("STD_NAME", sTD_NAME) :
                new ObjectParameter("STD_NAME", typeof(string));
    
            var sTD_FNAMEParameter = sTD_FNAME != null ?
                new ObjectParameter("STD_FNAME", sTD_FNAME) :
                new ObjectParameter("STD_FNAME", typeof(string));
    
            var sTD_PICParameter = sTD_PIC != null ?
                new ObjectParameter("STD_PIC", sTD_PIC) :
                new ObjectParameter("STD_PIC", typeof(byte[]));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var gENDERParameter = gENDER.HasValue ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(int));
    
            var pROG_NAMEParameter = pROG_NAME != null ?
                new ObjectParameter("PROG_NAME", pROG_NAME) :
                new ObjectParameter("PROG_NAME", typeof(string));
    
            var bATCH_NOParameter = bATCH_NO.HasValue ?
                new ObjectParameter("BATCH_NO", bATCH_NO) :
                new ObjectParameter("BATCH_NO", typeof(int));
    
            var tIME_SLOTParameter = tIME_SLOT != null ?
                new ObjectParameter("TIME_SLOT", tIME_SLOT) :
                new ObjectParameter("TIME_SLOT", typeof(string));
    
            var eMAIL_IDParameter = eMAIL_ID != null ?
                new ObjectParameter("EMAIL_ID", eMAIL_ID) :
                new ObjectParameter("EMAIL_ID", typeof(string));
    
            var pAR_EMAIL_IDParameter = pAR_EMAIL_ID != null ?
                new ObjectParameter("PAR_EMAIL_ID", pAR_EMAIL_ID) :
                new ObjectParameter("PAR_EMAIL_ID", typeof(string));
    
            var hOME_ADDREParameter = hOME_ADDRE != null ?
                new ObjectParameter("HOME_ADDRE", hOME_ADDRE) :
                new ObjectParameter("HOME_ADDRE", typeof(string));
    
            var sEM_IDParameter = sEM_ID.HasValue ?
                new ObjectParameter("SEM_ID", sEM_ID) :
                new ObjectParameter("SEM_ID", typeof(int));
    
            var rEGIS_DATEParameter = rEGIS_DATE.HasValue ?
                new ObjectParameter("REGIS_DATE", rEGIS_DATE) :
                new ObjectParameter("REGIS_DATE", typeof(System.DateTime));
    
            var pRIM_NUMParameter = pRIM_NUM != null ?
                new ObjectParameter("PRIM_NUM", pRIM_NUM) :
                new ObjectParameter("PRIM_NUM", typeof(string));
    
            var sECON_NUMParameter = sECON_NUM != null ?
                new ObjectParameter("SECON_NUM", sECON_NUM) :
                new ObjectParameter("SECON_NUM", typeof(string));
    
            var sMS_NUMParameter = sMS_NUM != null ?
                new ObjectParameter("SMS_NUM", sMS_NUM) :
                new ObjectParameter("SMS_NUM", typeof(string));
    
            var oTHER_NUMParameter = oTHER_NUM != null ?
                new ObjectParameter("OTHER_NUM", oTHER_NUM) :
                new ObjectParameter("OTHER_NUM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spStudentRegistration", sTD_IDParameter, sTD_NAMEParameter, sTD_FNAMEParameter, sTD_PICParameter, dOBParameter, gENDERParameter, pROG_NAMEParameter, bATCH_NOParameter, tIME_SLOTParameter, eMAIL_IDParameter, pAR_EMAIL_IDParameter, hOME_ADDREParameter, sEM_IDParameter, rEGIS_DATEParameter, pRIM_NUMParameter, sECON_NUMParameter, sMS_NUMParameter, oTHER_NUMParameter);
        }
    
        public virtual int spUpdateSemesterIdBatchWise(string bATCHTIME, Nullable<int> sEM_ID)
        {
            var bATCHTIMEParameter = bATCHTIME != null ?
                new ObjectParameter("BATCHTIME", bATCHTIME) :
                new ObjectParameter("BATCHTIME", typeof(string));
    
            var sEM_IDParameter = sEM_ID.HasValue ?
                new ObjectParameter("SEM_ID", sEM_ID) :
                new ObjectParameter("SEM_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateSemesterIdBatchWise", bATCHTIMEParameter, sEM_IDParameter);
        }
    
        public virtual int spUpdateStudent(Nullable<int> sTD_ID, string sTD_NAME, string sTD_FNAME, byte[] sTD_PIC, Nullable<System.DateTime> dOB, Nullable<int> gENDER, string pROG_NAME, Nullable<int> bATCH_NO, string tIME_SLOT, string eMAIL_ID, string pAR_EMAIL_ID, string hOME_ADDRE, Nullable<int> sEM_ID, Nullable<int> nO_ATTENDED, Nullable<System.DateTime> rEGIS_DATE, string pRIM_NUM, string sECON_NUM, string sMS_NUM, string oTHER_NUM)
        {
            var sTD_IDParameter = sTD_ID.HasValue ?
                new ObjectParameter("STD_ID", sTD_ID) :
                new ObjectParameter("STD_ID", typeof(int));
    
            var sTD_NAMEParameter = sTD_NAME != null ?
                new ObjectParameter("STD_NAME", sTD_NAME) :
                new ObjectParameter("STD_NAME", typeof(string));
    
            var sTD_FNAMEParameter = sTD_FNAME != null ?
                new ObjectParameter("STD_FNAME", sTD_FNAME) :
                new ObjectParameter("STD_FNAME", typeof(string));
    
            var sTD_PICParameter = sTD_PIC != null ?
                new ObjectParameter("STD_PIC", sTD_PIC) :
                new ObjectParameter("STD_PIC", typeof(byte[]));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var gENDERParameter = gENDER.HasValue ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(int));
    
            var pROG_NAMEParameter = pROG_NAME != null ?
                new ObjectParameter("PROG_NAME", pROG_NAME) :
                new ObjectParameter("PROG_NAME", typeof(string));
    
            var bATCH_NOParameter = bATCH_NO.HasValue ?
                new ObjectParameter("BATCH_NO", bATCH_NO) :
                new ObjectParameter("BATCH_NO", typeof(int));
    
            var tIME_SLOTParameter = tIME_SLOT != null ?
                new ObjectParameter("TIME_SLOT", tIME_SLOT) :
                new ObjectParameter("TIME_SLOT", typeof(string));
    
            var eMAIL_IDParameter = eMAIL_ID != null ?
                new ObjectParameter("EMAIL_ID", eMAIL_ID) :
                new ObjectParameter("EMAIL_ID", typeof(string));
    
            var pAR_EMAIL_IDParameter = pAR_EMAIL_ID != null ?
                new ObjectParameter("PAR_EMAIL_ID", pAR_EMAIL_ID) :
                new ObjectParameter("PAR_EMAIL_ID", typeof(string));
    
            var hOME_ADDREParameter = hOME_ADDRE != null ?
                new ObjectParameter("HOME_ADDRE", hOME_ADDRE) :
                new ObjectParameter("HOME_ADDRE", typeof(string));
    
            var sEM_IDParameter = sEM_ID.HasValue ?
                new ObjectParameter("SEM_ID", sEM_ID) :
                new ObjectParameter("SEM_ID", typeof(int));
    
            var nO_ATTENDEDParameter = nO_ATTENDED.HasValue ?
                new ObjectParameter("NO_ATTENDED", nO_ATTENDED) :
                new ObjectParameter("NO_ATTENDED", typeof(int));
    
            var rEGIS_DATEParameter = rEGIS_DATE.HasValue ?
                new ObjectParameter("REGIS_DATE", rEGIS_DATE) :
                new ObjectParameter("REGIS_DATE", typeof(System.DateTime));
    
            var pRIM_NUMParameter = pRIM_NUM != null ?
                new ObjectParameter("PRIM_NUM", pRIM_NUM) :
                new ObjectParameter("PRIM_NUM", typeof(string));
    
            var sECON_NUMParameter = sECON_NUM != null ?
                new ObjectParameter("SECON_NUM", sECON_NUM) :
                new ObjectParameter("SECON_NUM", typeof(string));
    
            var sMS_NUMParameter = sMS_NUM != null ?
                new ObjectParameter("SMS_NUM", sMS_NUM) :
                new ObjectParameter("SMS_NUM", typeof(string));
    
            var oTHER_NUMParameter = oTHER_NUM != null ?
                new ObjectParameter("OTHER_NUM", oTHER_NUM) :
                new ObjectParameter("OTHER_NUM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStudent", sTD_IDParameter, sTD_NAMEParameter, sTD_FNAMEParameter, sTD_PICParameter, dOBParameter, gENDERParameter, pROG_NAMEParameter, bATCH_NOParameter, tIME_SLOTParameter, eMAIL_IDParameter, pAR_EMAIL_IDParameter, hOME_ADDREParameter, sEM_IDParameter, nO_ATTENDEDParameter, rEGIS_DATEParameter, pRIM_NUMParameter, sECON_NUMParameter, sMS_NUMParameter, oTHER_NUMParameter);
        }
    
        public virtual int spUpdateStudent01(Nullable<int> sTD_ID, string pROG_NAME, string eMAIL_ID, string pRIM_NUM, string sECON_NUM, string sMS_NUM, Nullable<int> nO_ATTENDED)
        {
            var sTD_IDParameter = sTD_ID.HasValue ?
                new ObjectParameter("STD_ID", sTD_ID) :
                new ObjectParameter("STD_ID", typeof(int));
    
            var pROG_NAMEParameter = pROG_NAME != null ?
                new ObjectParameter("PROG_NAME", pROG_NAME) :
                new ObjectParameter("PROG_NAME", typeof(string));
    
            var eMAIL_IDParameter = eMAIL_ID != null ?
                new ObjectParameter("EMAIL_ID", eMAIL_ID) :
                new ObjectParameter("EMAIL_ID", typeof(string));
    
            var pRIM_NUMParameter = pRIM_NUM != null ?
                new ObjectParameter("PRIM_NUM", pRIM_NUM) :
                new ObjectParameter("PRIM_NUM", typeof(string));
    
            var sECON_NUMParameter = sECON_NUM != null ?
                new ObjectParameter("SECON_NUM", sECON_NUM) :
                new ObjectParameter("SECON_NUM", typeof(string));
    
            var sMS_NUMParameter = sMS_NUM != null ?
                new ObjectParameter("SMS_NUM", sMS_NUM) :
                new ObjectParameter("SMS_NUM", typeof(string));
    
            var nO_ATTENDEDParameter = nO_ATTENDED.HasValue ?
                new ObjectParameter("NO_ATTENDED", nO_ATTENDED) :
                new ObjectParameter("NO_ATTENDED", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStudent01", sTD_IDParameter, pROG_NAMEParameter, eMAIL_IDParameter, pRIM_NUMParameter, sECON_NUMParameter, sMS_NUMParameter, nO_ATTENDEDParameter);
        }
    
        public virtual int spUpdateStudentCountByBatchID(string bATCHID)
        {
            var bATCHIDParameter = bATCHID != null ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStudentCountByBatchID", bATCHIDParameter);
        }
    
        public virtual int spUpdateStudentCountInBatches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStudentCountInBatches");
        }
    
        public virtual int spUpdateStudentCountWithZero()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStudentCountWithZero");
        }
    
        public virtual int spUpdateStudentStatus(string sTATUSCODE, Nullable<int> sTDID)
        {
            var sTATUSCODEParameter = sTATUSCODE != null ?
                new ObjectParameter("STATUSCODE", sTATUSCODE) :
                new ObjectParameter("STATUSCODE", typeof(string));
    
            var sTDIDParameter = sTDID.HasValue ?
                new ObjectParameter("STDID", sTDID) :
                new ObjectParameter("STDID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStudentStatus", sTATUSCODEParameter, sTDIDParameter);
        }
    }
}
